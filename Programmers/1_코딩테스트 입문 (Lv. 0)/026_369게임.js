function solution(order) {
  const answer = `${order}`.match(/3|6|9/g);
  return answer === null ? 0 : answer.length;
}

//Try Again !
function solution(order) {
  return ('' + order).split(/[369]/).length - 1;
}


/** TIL
 * 코딩 테스트 런타임 에러 발생 원인
 * 1. 배열에 할당된 크기를 넘어 접근
 * 2. 전역 배열의 크기가 메모리 제한을 초과
 * 3. 지역 배열의 크기가 스택 크기 제한을 초과
 * 4. 0으로 나눌 때
 * 5. 라이브러리에서 예외 발생시
 * 6. 재귀 호출 횟수가 스택 크기 제한을 넘는 경우
 * 7. 이미 해제된 메모리를 또 참조할 경우
 * 8. 프로그램이 0이 아닌 수를 반환할 경우
 *
 * String으로 만들기 : '' + 숫자
 * 메서드 사용시 : ('' + order)
 * 
 * /3|6|9/  === /[369]/
 * 
 * 
 * 🥲 반성
 * 아직까지는 런타임 에러 발생 케이스가 "null값일 때 예외처리가 안됨 -> 함수 에러" 같은 예외처리 부분에서 많이 나온다.
 *
 * Ask a question -> 굳이 보지 말자... 고민할 기회를 빼앗김..
 * 
 * split이 진짜 좋은 메서드인데 활용방안을 쉽게 떠올리지 못한다.  => char 포함 -> 개수의 경우에 쓰자.
 *
 */
